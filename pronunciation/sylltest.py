import phonemizer
import pyphen
import espeakng
import re
import subprocess

entries = [
  "Äitilimanuljaska",
  "Äitinuljaska",
  "Alkemisti",
  "Alkemistin Varjo",
  "Amppari",
  "Ankka",
  "Arpaluu",
  "Auringonmuna",
  "Auringonsiemen",
  "Aurinkokivi",
  "Eldari",
  "Elvytyskristalli",
  "Epäalkemisti",
  "Eväkäs",
  "Haamu",
  "Haamukivi",
  "Haavoittajamestari",
  "Hahmonvaihtaja",
  "Häive",
  "Häivehiisi",
  "Hämähäkki",
  "Hämis",
  "Happonuljaska",
  "Haulikkohiisi",
  "Heikko äitinuljaska",
  "Heikko happonuljaska",
  "Heikko haulikkohiisi",
  "Heikko limanuljaska",
  "Heikkohurtta",
  "Heinäsirkka",
  "Helvetin sylkijä",
  "Helvetinkatse",
  "Helvetinmato",
  "Hernekeittopurkki",
  "Hiidenkivi",
  "Hohtava hyypiö",
  "Hohtonaamio",
  "Houre",
  "Huhtasieni",
  "Huilu",
  "Hurtta",
  "Hyypiö",
  "Isohiisi",
  "IT-Tankki",
  "Itiösieni",
  "Jäähdytyslaite",
  "Jäätiö",
  "Jalkamatkatavara",
  "Jättikonna",
  "Jättilaser-lennokki",
  "Jättimato",
  "Jouluhiisi",
  "Juhannussima",
  "Kadotettu alkemisti",
  "Kakkakikkare",
  "Kaljapullo",
  "Kallokärpänen",
  "Kallorotta",
  "Kalmamato",
  "Kammi",
  "Kammolukki",
  "Kantele",
  "Kärpässieni",
  "Kasvoton Hämähäkki",
  "Kasvoton Lukki",
  "Kauhuhirviö",
  "Kiekurakeppi",
  "Kilpihiisi",
  "Kirottu kristalli",
  "Kiuaskivi",
  "Kiukkukalma",
  "Kiukkumöykky",
  "KK-Tankki",
  "Kohdennusmestari",
  "Kokkihiisi",
  "Kolmisilmä",
  "Kolmisilmän apuri",
  "Kolmisilmän kätyri",
  "Kolmisilmän koipi",
  "Kolmisilmän silmä",
  "Konna",
  "Korjauslennokki",
  "Kranuhiisi",
  "Kuihduttajamestari",
  "Kummitus",
  "Kuu",
  "Kuulokivi",
  "Kyrmyniska",
  "Laahustussieni",
  "Lammas",
  "Laser-tankki",
  "Laserkanuuna",
  "Lennokki",
  "Lentolammas",
  "Lepakko",
  "Liekkari",
  "Liekkiö",
  "Liimahiisi",
  "Limanuljaska",
  "Limatoukka",
  "Lohkare",
  "Lukki",
  "Lukki lair",
  "Lukki Minion",
  "Maadoittajamestari",
  "Maamiina",
  "Mämmi",
  "Märkiäinen",
  "Marraskone",
  "Mätänevä kroppa",
  "Mätänevä pää",
  "Mätänevä ruumis",
  "Matkija",
  "Mato",
  "Matosade",
  "Mestarien mestari",
  "Meteorisade",
  "Miina",
  "Miinankylväjä",
  "Minä",
  "Mokke",
  "Molari",
  "Möykky",
  "Mulkkio",
  "Munkki",
  "Muodonmuutosmestari",
  "Murkku",
  "Myrkkyhiisi",
  "Myrkkynääpikkä",
  "Nahkiainen",
  "Nelikoipi",
  "Noita",
  "Nolla",
  "Nuijamalikka",
  "Olematon",
  "Paha Silmä",
  "Pahan muisto",
  "Pakkasukko",
  "Palauttajamestari",
  "Parantajahiisi",
  "Pata",
  "Patsas",
  "Peitsivartija",
  "Pienkätyri",
  "Pikkuhämähäkki",
  "Pikkumato",
  "Pikkutulikärpänen",
  "Pikkuturso",
  "Pimeä Aurinko",
  "Pimeys",
  "Plasmakukka",
  "Poro",
  "Puska",
  "Pysäyttäjä",
  "Raukka",
  "Rautalukki",
  "Rihmasto",
  "Riimusauva",
  "Robottikyttä",
  "Rotta",
  "Ruttorotta",
  "Ruusu",
  "Rynkkyhiisi",
  "Sädekivi",
  "Sähikäinen",
  "Sähikäismenninkäinen",
  "Sähkiö",
  "Salamurhaajarobotti",
  "Sampo",
  "Sappitatti",
  "Sätkymestari",
  "Sauvan Ydin",
  "Sauvojen tuntija",
  "Seula",
  "Siirtäjämestari",
  "Sima",
  "Skorpioni",
  "Skoude",
  "Snipuhiisi",
  "Sokaisunmestari",
  "Spiraalikalma",
  "Stendari",
  "Stevari",
  "Suhiseva lammas",
  "Suomuhauki",
  "Supernova",
  "Susi",
  "Suur-Ukko",
  "Suureväkäs",
  "Suurlepakko",
  "Suurstendari",
  "Suurtulikärpänen",
  "Sylkyri",
  "Syväolento",
  "Tähdenpoikanen",
  "Taikasauva",
  "Taivaankatse",
  "Taivaskristalli",
  "Tannerkivi",
  "Tappurahiisi",
  "Tappurahiisiläinen",
  "Tarkkailija",
  "Teloittaja",
  "Toimari",
  "Torjuntalaite",
  "Toukka",
  "Toveri",
  "Toveri lohkare",
  "Tulihiisi",
  "Tuonelankone",
  "Turso",
  "Turvalennokki",
  "Turvattomuusmestari",
  "Turvonnu velho",
  "Ukko",
  "Ukkoshyypiö",
  "Ukkoskivi",
  "Ukkoskoira",
  "Unohdettu",
  "Uusi Aurinko",
  "Vaihdosmestari",
  "Vakoilija",
  "Valaistunut alkemisti",
  "Valo",
  "Valtikka",
  "Varjokupla",
  "Varpuluuta",
  "Vasta",
  "Verikristalli",
  "Veska",
  "Vihta",
  "Vuoksikivi",
  "Ylialkemisti",
]

translit_syls = {
    "äi": "I",
    "ti": "T",
    "li": "lee",
    "nul": "nool",
    "jas": "yes",
    "al": "all",
    "ke": "keh",
    "mis": "miss",
    "mistin": "miss-tin",
    "jo": "yo",
    "amp": "aump",
    "ri": "ree",
    "ank": "aunk",
    "ar": "arr",
    "pa": "pah",
    "luu": "loo",
    "ringon": "ring-on",
    "mu": "moo",
    "hyy": "huu",
    "piö": "piah",
    "jää": "yaa",
    "tiö": "tiah",
    "kak": "kokk",
    "kik": "kick",
    "re": "reh",
    "kam": "kom",
    "mi": "me",
    "kammo": "kom-mo",
    "luk": "look",
    "ki": "key",
    "au": "ow",
    "vi": "V",
    "epä": "epah",
    "mu": "moo",
    "mes": "mess",
    "hi": "he",
    "si": "C",
    "ve": "vuhh",
    "are": "R",
    "lik": "lick",
}

def syllabify_finnish(word):
    #separator = phonemizer.separator.Separator(phone='-')
    #syllables = phonemizer.phonemize(word, language='fi', backend='espeak', separator=separator, strip=True, preserve_punctuation=True)
    syllables = pyphen.Pyphen(lang='sv').inserted(phoneme).split('-')
    return syllables.split('-')

def transliterate_syllables(syllables):
    trans_syllables = []
    for syllable in syllables:
        transliterated_syllable = syllable.lower()
        transliterated_syllable = translit_syls.get(transliterated_syllable, transliterated_syllable)
        trans_syllables.append(transliterated_syllable)
    return trans_syllables


for word in entries:
    #syllables = syllabify_finnish(word)
    #trans_syllables = transliterate_syllables(syllables)
    #trans_word = '-'.join(trans_syllables)

    #print(f"{word}  ->  {'-'.join(syllables)}  ->  {trans_word}")
    
    command = f"espeak-ng -v fi -xq --ipa '{word}'"
    ipa_word = subprocess.check_output(command, shell=True).decode().strip()
    #synth = espeakng.Synth()
    #synth.voice = "fi"
    #synth.speed = 120

    #ipa_text = synth.phonemes(text)
    #ipa_text = re.sub(r"[ˈˌ]", "", ipa_text)
    ipa_symbols = ipa_word.split()
    dic = pyphen.Pyphen(lang='en')

    syllables = []
    for symbol in ipa_symbols:
        syllables.extend(dic.inserted(symbol).split("-"))

    print(syllables)
    

    print(f"{word}  ->  {ipa_word}")